import random

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import CallbackQuery
from loguru import logger

from data.config import support_ids
from filters import IsPrivate
from keyboards.inline.main_menu_inline import start_keyboard
from loader import dp, _
from utils.db_api import db_commands


@dp.message_handler(IsPrivate(), CommandStart())
async def register_user(message: types.Message):
    try:
        if message.from_user.username is not None:
            await db_commands.add_user(name=message.from_user.full_name,
                                       telegram_id=message.from_user.id,
                                       username=message.from_user.username)
            await db_commands.add_meetings_user(telegram_id=message.from_user.id,
                                                username=message.from_user.username)
        else:
            await db_commands.add_user(name=message.from_user.full_name,
                                       telegram_id=message.from_user.id,
                                       username="None")
            await db_commands.add_meetings_user(telegram_id=message.from_user.id,
                                                username="None")

    except:
        pass
    support = await db_commands.select_user(telegram_id=support_ids[0])
    user_db = await db_commands.select_user(telegram_id=message.from_user.id)
    markup = await start_keyboard(status=user_db["status"])

    heart = random.choice(['üíô', 'üíö', 'üíõ', 'üß°', 'üíú', 'üñ§', '‚ù§', 'ü§ç', 'üíñ', 'üíù'])
    await message.answer(text=_(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, {message.from_user.full_name}!!\n\n"
                                f"{heart} <b> QueDateBot </b> - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.\n\n"
                                f"ü™ß –ù–æ–≤–æ—Å—Ç–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ - "
                                f"https://t.me/QueDateGroup \n\n"
                                f"<b>ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ: </b>\n"
                                f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ, –ø–∏—à–∏—Ç–µ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ - "
                                f"@{support['username']}\n\n"
                                ),
                         reply_markup=markup)


@dp.callback_query_handler(text="start_menu")
async def start_menu(call: CallbackQuery):
    user_db = await db_commands.select_user(telegram_id=call.from_user.id)
    support = await db_commands.select_user(telegram_id=support_ids[0])
    markup = await start_keyboard(user_db["status"])
    heart = random.choice(['üíô', 'üíö', 'üíõ', 'üß°', 'üíú', 'üñ§', '‚ù§', 'ü§ç', 'üíñ', 'üíù'])
    await call.message.edit_text(text=_(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, {call.from_user.full_name}!!\n\n"
                                        f"{heart} <b> QueDateBot </b> - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.\n\n"
                                        f"ü™ß –ù–æ–≤–æ—Å—Ç–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ - "
                                        f"https://t.me/QueDateGroup \n\n"
                                        f"ü§ù <b> –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ: </b>\n"
                                        f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ, –ø–∏—à–∏—Ç–µ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ - "
                                        f"@{support['username']}\n\n"
                                        ),
                                 reply_markup=markup)


@dp.callback_query_handler(text_contains="lang")
async def change_language(call: CallbackQuery):
    await call.message.edit_reply_markup()
    lang = call.data[-2:]
    await call.message.answer(_("–í–∞—à —è–∑—ã–∫ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω", locale=lang))
